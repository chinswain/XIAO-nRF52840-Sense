#include <PDM.h>

// Buffer for audio samples and variables
#define BUFFER_SIZE 256
int16_t sampleBuffer[BUFFER_SIZE];
volatile int samplesRead = 0;

void setup() {
  Serial.begin(115200);
  while (!Serial); // Wait for Serial monitor to open

  // Configure PDM callback
  PDM.onReceive(onPDMdata);

  // Set microphone gain (0-255, default 20)
   PDM.setGain(255);

  // Initialize PDM with mono, 16kHz sampling
  if (!PDM.begin(1, 16000)) {
    Serial.println("Failed to start PDM!");
    while (1);
  }

  Serial.println("PDM microphone initialized.");
}

void loop() {
  if (samplesRead > 0) {
    // Calculate RMS from samples
    long sum = 0;
    for (int i = 0; i < samplesRead; i++) {
      sum += (sampleBuffer[i] * sampleBuffer[i]);
    }

    // Root Mean Square (RMS) calculation
    float rms = sqrt((float)sum / samplesRead);
    Serial.print("Sound Level: ");
    Serial.println(rms);

    // Reset samplesRead
    samplesRead = 0;
  }
}

// PDM data ready callback
void onPDMdata() {
  int bytesAvailable = PDM.available();
  PDM.read((byte*)sampleBuffer, bytesAvailable);
  samplesRead = bytesAvailable / 2; // 16-bit samples
}
